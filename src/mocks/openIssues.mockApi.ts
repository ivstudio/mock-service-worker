export const openIssuesMockApi = [
    {
        url: 'https://api.github.com/repos/facebook/react/issues/30786',
        repository_url: 'https://api.github.com/repos/facebook/react',
        labels_url:
            'https://api.github.com/repos/facebook/react/issues/30786/labels{/name}',
        comments_url:
            'https://api.github.com/repos/facebook/react/issues/30786/comments',
        events_url:
            'https://api.github.com/repos/facebook/react/issues/30786/events',
        html_url: 'https://github.com/facebook/react/pull/30786',
        id: 2479652650,
        node_id: 'PR_kwDOAJy2Ks55ETNh',
        number: 30786,
        title: '[DevTools] Make function inspection instant',
        user: {
            login: 'sebmarkbage',
            id: 63648,
            node_id: 'MDQ6VXNlcjYzNjQ4',
            avatar_url: 'https://avatars.githubusercontent.com/u/63648?v=4',
            gravatar_id: '',
            url: 'https://api.github.com/users/sebmarkbage',
            html_url: 'https://github.com/sebmarkbage',
            followers_url: 'https://api.github.com/users/sebmarkbage/followers',
            following_url:
                'https://api.github.com/users/sebmarkbage/following{/other_user}',
            gists_url:
                'https://api.github.com/users/sebmarkbage/gists{/gist_id}',
            starred_url:
                'https://api.github.com/users/sebmarkbage/starred{/owner}{/repo}',
            subscriptions_url:
                'https://api.github.com/users/sebmarkbage/subscriptions',
            organizations_url: 'https://api.github.com/users/sebmarkbage/orgs',
            repos_url: 'https://api.github.com/users/sebmarkbage/repos',
            events_url:
                'https://api.github.com/users/sebmarkbage/events{/privacy}',
            received_events_url:
                'https://api.github.com/users/sebmarkbage/received_events',
            type: 'User',
            site_admin: false,
        },
        labels: [
            {
                id: 196858374,
                node_id: 'MDU6TGFiZWwxOTY4NTgzNzQ=',
                url: 'https://api.github.com/repos/facebook/react/labels/CLA%20Signed',
                name: 'CLA Signed',
                color: 'e7e7e7',
                default: false,
                description: null,
            },
            {
                id: 1775958285,
                node_id: 'MDU6TGFiZWwxNzc1OTU4Mjg1',
                url: 'https://api.github.com/repos/facebook/react/labels/React%20Core%20Team',
                name: 'React Core Team',
                color: '9149d1',
                default: false,
                description: 'Opened by a member of the React Core Team',
            },
        ],
        state: 'open',
        locked: false,
        assignee: null,
        assignees: [],
        milestone: null,
        comments: 1,
        created_at: '2024-08-22T02:48:57Z',
        updated_at: '2024-08-22T02:51:16Z',
        closed_at: null,
        author_association: 'COLLABORATOR',
        active_lock_reason: null,
        draft: false,
        pull_request: {
            url: 'https://api.github.com/repos/facebook/react/pulls/30786',
            html_url: 'https://github.com/facebook/react/pull/30786',
            diff_url: 'https://github.com/facebook/react/pull/30786.diff',
            patch_url: 'https://github.com/facebook/react/pull/30786.patch',
            merged_at: null,
        },
        body: "I noticed that there is a delay due to the inspection being split into one part that gets the attribute and another eval that does the inspection. This is a bit hacky and uses temporary global names that are leaky. The timeout was presumably to ensure that the first step had fully propagated but it's slow. As we've learned, it can be throttled, and it isn't a guarantee either way.\r\n\r\nInstead, we can just consolidate these into a single operation that by-passes the bridge and goes straight to the renderer interface from the eval.\r\n\r\nI did the same for the viewElementSource helper even though that's not currently in use since #28471 but I think we probably should return to that technique when it's available since it's more reliable than the throw - at least in Chrome. I'm not sure about the status of React Native here. In Firefox, inspecting a function with source maps doesn't seem to work. It doesn't jump to original code.",
        reactions: {
            url: 'https://api.github.com/repos/facebook/react/issues/30786/reactions',
            total_count: 0,
            '+1': 0,
            '-1': 0,
            laugh: 0,
            hooray: 0,
            confused: 0,
            heart: 0,
            rocket: 0,
            eyes: 0,
        },
        timeline_url:
            'https://api.github.com/repos/facebook/react/issues/30786/timeline',
        performed_via_github_app: null,
        state_reason: null,
    },
    {
        url: 'https://api.github.com/repos/facebook/react/issues/30782',
        repository_url: 'https://api.github.com/repos/facebook/react',
        labels_url:
            'https://api.github.com/repos/facebook/react/issues/30782/labels{/name}',
        comments_url:
            'https://api.github.com/repos/facebook/react/issues/30782/comments',
        events_url:
            'https://api.github.com/repos/facebook/react/issues/30782/events',
        html_url: 'https://github.com/facebook/react/issues/30782',
        id: 2479437158,
        node_id: 'I_kwDOAJy2Ks6TyTVm',
        number: 30782,
        title: '[Compiler Bug]: eslint-plugin-react-compiler errors when updating initialization of ref.current',
        user: {
            login: 'jeremy-code',
            id: 43259194,
            node_id: 'MDQ6VXNlcjQzMjU5MTk0',
            avatar_url: 'https://avatars.githubusercontent.com/u/43259194?v=4',
            gravatar_id: '',
            url: 'https://api.github.com/users/jeremy-code',
            html_url: 'https://github.com/jeremy-code',
            followers_url: 'https://api.github.com/users/jeremy-code/followers',
            following_url:
                'https://api.github.com/users/jeremy-code/following{/other_user}',
            gists_url:
                'https://api.github.com/users/jeremy-code/gists{/gist_id}',
            starred_url:
                'https://api.github.com/users/jeremy-code/starred{/owner}{/repo}',
            subscriptions_url:
                'https://api.github.com/users/jeremy-code/subscriptions',
            organizations_url: 'https://api.github.com/users/jeremy-code/orgs',
            repos_url: 'https://api.github.com/users/jeremy-code/repos',
            events_url:
                'https://api.github.com/users/jeremy-code/events{/privacy}',
            received_events_url:
                'https://api.github.com/users/jeremy-code/received_events',
            type: 'User',
            site_admin: false,
        },
        labels: [
            {
                id: 40929151,
                node_id: 'MDU6TGFiZWw0MDkyOTE1MQ==',
                url: 'https://api.github.com/repos/facebook/react/labels/Type:%20Bug',
                name: 'Type: Bug',
                color: 'b60205',
                default: false,
                description: null,
            },
            {
                id: 155984160,
                node_id: 'MDU6TGFiZWwxNTU5ODQxNjA=',
                url: 'https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed',
                name: 'Status: Unconfirmed',
                color: 'd4c5f9',
                default: false,
                description:
                    "A potential issue that we haven't yet confirmed as a bug",
            },
            {
                id: 180616330,
                node_id: 'MDU6TGFiZWwxODA2MTYzMzA=',
                url: 'https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler',
                name: 'Component: Optimizing Compiler',
                color: 'bfdadc',
                default: false,
                description: null,
            },
        ],
        state: 'open',
        locked: false,
        assignee: null,
        assignees: [],
        milestone: null,
        comments: 1,
        created_at: '2024-08-21T23:52:41Z',
        updated_at: '2024-08-21T23:53:55Z',
        closed_at: null,
        author_association: 'NONE',
        active_lock_reason: null,
        body: '### What kind of issue is this?\n\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\n\n### Link to repro\n\nhttps://playground.react.dev/#N4Igzg9grgTgxgUxALhAHRFMCAEcA2AlggHYAuGA3GiTYQLYAOEMZOwOWCASggGY4Avjj4wI9HBhgIAhnAohqtEnAgkwbAKoA5AJJ6AKroCCAGV0AtAKIARHAF4cAZQCe9AEYR8ACgw79ukZmlrYYAJRKNAgAHsyseGoanNgA8iq4jgA8BgA0AHzehCSEZIQy+ABq5VAIyDgGOAA+ON7eYQ559WHt9p3ANDgJ6mzSAo5cvAKZ9U04ZC6MCBAC-oYm5tZ2nd6rgeshNhE0AziEAt6jAHRwsNLkDvaOu0Ebtu39JIODVzcwd2yOeaLZanYqlcpVfA1B6ODB8KAqUpqDA4AD8oJKZUq1QQbRwdSKmIhOKUg0Ex0+OGkZFgnx+t1IZCUgkiJBicTYABN+DIoPg2PDEYQ1DgALIuYyMRh4j7fBA0mCfTKcwgANzyAAkEPh8BAcAB1Fj4TmZAD0KvVzJoIEEQA\n\n### Repro steps\n\n1. Initialize `useRef` with some dummy value (e.g. null, Symbol, undefined, etc.) to be changed after initialization/during render.\r\n2. Update `ref.current` by checking whether it is equivalent to its initial condition (as per documentation: [useRef#Avoiding recreating the ref contents](https://react.dev/reference/react/useRef#avoiding-recreating-the-ref-contents))\r\n  - > To solve it, you may initialize the ref like this instead:\r\n  ```\r\n  function Video() {\r\n    const playerRef = useRef(null);\r\n    if (playerRef.current === null) {\r\n      playerRef.current = new VideoPlayer();\r\n    }\r\n    // ...\r\n  ```\r\n\r\n  - > Normally, writing or reading ref.current during render is not allowed. However, it’s fine in this case because the result is always the same, and the condition only executes during initialization so it’s fully predictable.\r\n  \r\n3. eslint-plugin-react-compiler gives error\r\n\r\n```\r\nInvalidReact: Ref values (the `current` property) may not be accessed during render. (https://react.dev/reference/react/useRef)\r\n```\n\n### How often does this bug happen?\n\nEvery time\n\n### What version of React are you using?\n\n19.0.0-rc-1d989965-20240821',
        reactions: {
            url: 'https://api.github.com/repos/facebook/react/issues/30782/reactions',
            total_count: 0,
            '+1': 0,
            '-1': 0,
            laugh: 0,
            hooray: 0,
            confused: 0,
            heart: 0,
            rocket: 0,
            eyes: 0,
        },
        timeline_url:
            'https://api.github.com/repos/facebook/react/issues/30782/timeline',
        performed_via_github_app: null,
        state_reason: null,
    },
    {
        url: 'https://api.github.com/repos/facebook/react/issues/30772',
        repository_url: 'https://api.github.com/repos/facebook/react',
        labels_url:
            'https://api.github.com/repos/facebook/react/issues/30772/labels{/name}',
        comments_url:
            'https://api.github.com/repos/facebook/react/issues/30772/comments',
        events_url:
            'https://api.github.com/repos/facebook/react/issues/30772/events',
        html_url: 'https://github.com/facebook/react/issues/30772',
        id: 2477246401,
        node_id: 'I_kwDOAJy2Ks6Tp8fB',
        number: 30772,
        title: '[DevTools Bug]: inspecting pseudo-elements in Firefox gives error `Permission denied to access property "__reactFiber$sofadm08s2"`',
        user: {
            login: 'fspin',
            id: 10550010,
            node_id: 'MDQ6VXNlcjEwNTUwMDEw',
            avatar_url: 'https://avatars.githubusercontent.com/u/10550010?v=4',
            gravatar_id: '',
            url: 'https://api.github.com/users/fspin',
            html_url: 'https://github.com/fspin',
            followers_url: 'https://api.github.com/users/fspin/followers',
            following_url:
                'https://api.github.com/users/fspin/following{/other_user}',
            gists_url: 'https://api.github.com/users/fspin/gists{/gist_id}',
            starred_url:
                'https://api.github.com/users/fspin/starred{/owner}{/repo}',
            subscriptions_url:
                'https://api.github.com/users/fspin/subscriptions',
            organizations_url: 'https://api.github.com/users/fspin/orgs',
            repos_url: 'https://api.github.com/users/fspin/repos',
            events_url: 'https://api.github.com/users/fspin/events{/privacy}',
            received_events_url:
                'https://api.github.com/users/fspin/received_events',
            type: 'User',
            site_admin: false,
        },
        labels: [
            {
                id: 40929151,
                node_id: 'MDU6TGFiZWw0MDkyOTE1MQ==',
                url: 'https://api.github.com/repos/facebook/react/labels/Type:%20Bug',
                name: 'Type: Bug',
                color: 'b60205',
                default: false,
                description: null,
            },
            {
                id: 155984160,
                node_id: 'MDU6TGFiZWwxNTU5ODQxNjA=',
                url: 'https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed',
                name: 'Status: Unconfirmed',
                color: 'd4c5f9',
                default: false,
                description:
                    "A potential issue that we haven't yet confirmed as a bug",
            },
            {
                id: 710573595,
                node_id: 'MDU6TGFiZWw3MTA1NzM1OTU=',
                url: 'https://api.github.com/repos/facebook/react/labels/Component:%20Developer%20Tools',
                name: 'Component: Developer Tools',
                color: 'fbca04',
                default: false,
                description: null,
            },
        ],
        state: 'open',
        locked: false,
        assignee: null,
        assignees: [],
        milestone: null,
        comments: 0,
        created_at: '2024-08-21T07:08:14Z',
        updated_at: '2024-08-21T07:17:09Z',
        closed_at: null,
        author_association: 'NONE',
        active_lock_reason: null,
        body: '### Website or app\r\n\r\nhttps://wk82tp.csb.app/\r\n\r\n### Repro steps\r\n\r\n1. Go to the Sandbox link in Firefox (129.0.2), with React DevTools (5.3.1)\r\n2. Open the inspector.\r\n3. Select the `::after` pseudo-element next to the `<h1>`.\r\n\r\n### More Info\r\nI add a screenshot of the issue.\r\n<img width="1305" alt="Screenshot 2024-08-21 at 09 06 24" src="https://github.com/user-attachments/assets/d3e869af-80f1-44d5-a9ec-a47ed8472974">\r\n\r\nThis is happening from a while. Of course, is not a big issue, because if I close the error on the main screen, I can keep working. And until now I wasn\'t using much of pseudo-elements. \r\n\r\nBut now, I\'m working on a new feature in our app, where I\'m relying hardly on `::after` en `::before` pseudo elements. And it is quite annoying.\r\n\r\nThis is happening since DevTools 4.28.4. Until v4.27.8 I didn\'t had problems. On this version (4.27.8) the error is shown only when opening the tab "(React) Components" in the inspector... which kind of make sense, right?. \r\n\r\nWhat doesn\'t make sense (to me) is that I got this error when inspecting the pseudo-element in the basic firefox inspector (trying to apply css properties on it).\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n',
        reactions: {
            url: 'https://api.github.com/repos/facebook/react/issues/30772/reactions',
            total_count: 0,
            '+1': 0,
            '-1': 0,
            laugh: 0,
            hooray: 0,
            confused: 0,
            heart: 0,
            rocket: 0,
            eyes: 0,
        },
        timeline_url:
            'https://api.github.com/repos/facebook/react/issues/30772/timeline',
        performed_via_github_app: null,
        state_reason: null,
    },
    {
        url: 'https://api.github.com/repos/facebook/react/issues/30771',
        repository_url: 'https://api.github.com/repos/facebook/react',
        labels_url:
            'https://api.github.com/repos/facebook/react/issues/30771/labels{/name}',
        comments_url:
            'https://api.github.com/repos/facebook/react/issues/30771/comments',
        events_url:
            'https://api.github.com/repos/facebook/react/issues/30771/events',
        html_url: 'https://github.com/facebook/react/pull/30771',
        id: 2477187543,
        node_id: 'PR_kwDOAJy2Ks548G9U',
        number: 30771,
        title: '[compiler] Environment option for resolving imported module types',
        user: {
            login: 'josephsavona',
            id: 6425824,
            node_id: 'MDQ6VXNlcjY0MjU4MjQ=',
            avatar_url: 'https://avatars.githubusercontent.com/u/6425824?v=4',
            gravatar_id: '',
            url: 'https://api.github.com/users/josephsavona',
            html_url: 'https://github.com/josephsavona',
            followers_url:
                'https://api.github.com/users/josephsavona/followers',
            following_url:
                'https://api.github.com/users/josephsavona/following{/other_user}',
            gists_url:
                'https://api.github.com/users/josephsavona/gists{/gist_id}',
            starred_url:
                'https://api.github.com/users/josephsavona/starred{/owner}{/repo}',
            subscriptions_url:
                'https://api.github.com/users/josephsavona/subscriptions',
            organizations_url: 'https://api.github.com/users/josephsavona/orgs',
            repos_url: 'https://api.github.com/users/josephsavona/repos',
            events_url:
                'https://api.github.com/users/josephsavona/events{/privacy}',
            received_events_url:
                'https://api.github.com/users/josephsavona/received_events',
            type: 'User',
            site_admin: false,
        },
        labels: [
            {
                id: 196858374,
                node_id: 'MDU6TGFiZWwxOTY4NTgzNzQ=',
                url: 'https://api.github.com/repos/facebook/react/labels/CLA%20Signed',
                name: 'CLA Signed',
                color: 'e7e7e7',
                default: false,
                description: null,
            },
            {
                id: 1775958285,
                node_id: 'MDU6TGFiZWwxNzc1OTU4Mjg1',
                url: 'https://api.github.com/repos/facebook/react/labels/React%20Core%20Team',
                name: 'React Core Team',
                color: '9149d1',
                default: false,
                description: 'Opened by a member of the React Core Team',
            },
        ],
        state: 'open',
        locked: false,
        assignee: null,
        assignees: [],
        milestone: null,
        comments: 1,
        created_at: '2024-08-21T06:34:21Z',
        updated_at: '2024-08-22T01:21:34Z',
        closed_at: null,
        author_association: 'CONTRIBUTOR',
        active_lock_reason: null,
        draft: false,
        pull_request: {
            url: 'https://api.github.com/repos/facebook/react/pulls/30771',
            html_url: 'https://github.com/facebook/react/pull/30771',
            diff_url: 'https://github.com/facebook/react/pull/30771.diff',
            patch_url: 'https://github.com/facebook/react/pull/30771.patch',
            merged_at: null,
        },
        body: "Stack from [ghstack](https://github.com/ezyang/ghstack) (oldest at bottom):\n* #30785\n* #30784\n* #30783\n* __->__ #30771\n* #30766\n* #30764\n\r\nAdds a new Environment config option which allows specifying a function that is called to resolve types of imported modules. The function is passed the name of the imported module (the RHS of the import stmt) and can return a TypeConfig, which is a recursive type of the following form:\r\n\r\n* Object of valid identifier keys (or \"*\" for wildcard) and values that are TypeConfigs\r\n* Function with various properties, whose return type is a TypeConfig\r\n* or a reference to a builtin type using one of a small list (currently Ref, Array, MixedReadonly, Primitive)\r\n\r\nRather than have to eagerly supply all known types (most of which may not be used) when creating the config, this function can do so lazily. During InferTypes we call `getGlobalDeclaration()` to resolve global types. Originally this was just for known react modules, but if the new config option is passed we also call it to see if it can resolve a type. For `import {name} from 'module'` syntax, we first resolve the module type and then call `getPropertyType(moduleType, 'name')` to attempt to retrieve the property of the module (the module would obviously have to be typed as an object type for this to have a chance of yielding a result). If the module type is returned as null, or the property doesn't exist, we fall through to the original checking of whether the name was hook-like.\r\n\r\nThe next diff adds tests and improves the infra to cache the loaded module types.",
        reactions: {
            url: 'https://api.github.com/repos/facebook/react/issues/30771/reactions',
            total_count: 0,
            '+1': 0,
            '-1': 0,
            laugh: 0,
            hooray: 0,
            confused: 0,
            heart: 0,
            rocket: 0,
            eyes: 0,
        },
        timeline_url:
            'https://api.github.com/repos/facebook/react/issues/30771/timeline',
        performed_via_github_app: null,
        state_reason: null,
    },
    {
        url: 'https://api.github.com/repos/facebook/react/issues/30694',
        repository_url: 'https://api.github.com/repos/facebook/react',
        labels_url:
            'https://api.github.com/repos/facebook/react/issues/30694/labels{/name}',
        comments_url:
            'https://api.github.com/repos/facebook/react/issues/30694/comments',
        events_url:
            'https://api.github.com/repos/facebook/react/issues/30694/events',
        html_url: 'https://github.com/facebook/react/pull/30694',
        id: 2466412840,
        node_id: 'PR_kwDOAJy2Ks54Y29e',
        number: 30694,
        title: 'Bump axios from 1.7.1 to 1.7.4 in /compiler',
        user: {
            login: 'dependabot[bot]',
            id: 49699333,
            node_id: 'MDM6Qm90NDk2OTkzMzM=',
            avatar_url: 'https://avatars.githubusercontent.com/in/29110?v=4',
            gravatar_id: '',
            url: 'https://api.github.com/users/dependabot%5Bbot%5D',
            html_url: 'https://github.com/apps/dependabot',
            followers_url:
                'https://api.github.com/users/dependabot%5Bbot%5D/followers',
            following_url:
                'https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}',
            gists_url:
                'https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}',
            starred_url:
                'https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}',
            subscriptions_url:
                'https://api.github.com/users/dependabot%5Bbot%5D/subscriptions',
            organizations_url:
                'https://api.github.com/users/dependabot%5Bbot%5D/orgs',
            repos_url: 'https://api.github.com/users/dependabot%5Bbot%5D/repos',
            events_url:
                'https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}',
            received_events_url:
                'https://api.github.com/users/dependabot%5Bbot%5D/received_events',
            type: 'Bot',
            site_admin: false,
        },
        labels: [
            {
                id: 196858374,
                node_id: 'MDU6TGFiZWwxOTY4NTgzNzQ=',
                url: 'https://api.github.com/repos/facebook/react/labels/CLA%20Signed',
                name: 'CLA Signed',
                color: 'e7e7e7',
                default: false,
                description: null,
            },
            {
                id: 1757816973,
                node_id: 'MDU6TGFiZWwxNzU3ODE2OTcz',
                url: 'https://api.github.com/repos/facebook/react/labels/dependencies',
                name: 'dependencies',
                color: '0366d6',
                default: false,
                description: 'Pull requests that update a dependency file',
            },
            {
                id: 7065542027,
                node_id: 'LA_kwDOAJy2Ks8AAAABpSOdiw',
                url: 'https://api.github.com/repos/facebook/react/labels/javascript',
                name: 'javascript',
                color: '168700',
                default: false,
                description: 'Pull requests that update Javascript code',
            },
        ],
        state: 'open',
        locked: false,
        assignee: null,
        assignees: [],
        milestone: null,
        comments: 1,
        created_at: '2024-08-14T17:24:28Z',
        updated_at: '2024-08-14T17:29:45Z',
        closed_at: null,
        author_association: 'CONTRIBUTOR',
        active_lock_reason: null,
        draft: false,
        pull_request: {
            url: 'https://api.github.com/repos/facebook/react/pulls/30694',
            html_url: 'https://github.com/facebook/react/pull/30694',
            diff_url: 'https://github.com/facebook/react/pull/30694.diff',
            patch_url: 'https://github.com/facebook/react/pull/30694.patch',
            merged_at: null,
        },
        body: 'Bumps [axios](https://github.com/axios/axios)',
        reactions: {
            url: 'https://api.github.com/repos/facebook/react/issues/30694/reactions',
            total_count: 0,
            '+1': 0,
            '-1': 0,
            laugh: 0,
            hooray: 0,
            confused: 0,
            heart: 0,
            rocket: 0,
            eyes: 0,
        },
        timeline_url:
            'https://api.github.com/repos/facebook/react/issues/30694/timeline',
        performed_via_github_app: null,
        state_reason: null,
    },
    {
        url: 'https://api.github.com/repos/facebook/react/issues/30745',
        repository_url: 'https://api.github.com/repos/facebook/react',
        labels_url:
            'https://api.github.com/repos/facebook/react/issues/30745/labels{/name}',
        comments_url:
            'https://api.github.com/repos/facebook/react/issues/30745/comments',
        events_url:
            'https://api.github.com/repos/facebook/react/issues/30745/events',
        html_url: 'https://github.com/facebook/react/issues/30745',
        id: 2473838590,
        node_id: 'I_kwDOAJy2Ks6Tc8f-',
        number: 30745,
        title: '[Compiler]: Ref values (the `current` property) may not be accessed during render - showing error message for custom hooks',
        user: {
            login: 'gkiely',
            id: 1948935,
            node_id: 'MDQ6VXNlcjE5NDg5MzU=',
            avatar_url: 'https://avatars.githubusercontent.com/u/1948935?v=4',
            gravatar_id: '',
            url: 'https://api.github.com/users/gkiely',
            html_url: 'https://github.com/gkiely',
            followers_url: 'https://api.github.com/users/gkiely/followers',
            following_url:
                'https://api.github.com/users/gkiely/following{/other_user}',
            gists_url: 'https://api.github.com/users/gkiely/gists{/gist_id}',
            starred_url:
                'https://api.github.com/users/gkiely/starred{/owner}{/repo}',
            subscriptions_url:
                'https://api.github.com/users/gkiely/subscriptions',
            organizations_url: 'https://api.github.com/users/gkiely/orgs',
            repos_url: 'https://api.github.com/users/gkiely/repos',
            events_url: 'https://api.github.com/users/gkiely/events{/privacy}',
            received_events_url:
                'https://api.github.com/users/gkiely/received_events',
            type: 'User',
            site_admin: false,
        },
        labels: [
            {
                id: 40929151,
                node_id: 'MDU6TGFiZWw0MDkyOTE1MQ==',
                url: 'https://api.github.com/repos/facebook/react/labels/Type:%20Bug',
                name: 'Type: Bug',
                color: 'b60205',
                default: false,
                description: null,
            },
            {
                id: 155984160,
                node_id: 'MDU6TGFiZWwxNTU5ODQxNjA=',
                url: 'https://api.github.com/repos/facebook/react/labels/Status:%20Unconfirmed',
                name: 'Status: Unconfirmed',
                color: 'd4c5f9',
                default: false,
                description:
                    "A potential issue that we haven't yet confirmed as a bug",
            },
            {
                id: 180616330,
                node_id: 'MDU6TGFiZWwxODA2MTYzMzA=',
                url: 'https://api.github.com/repos/facebook/react/labels/Component:%20Optimizing%20Compiler',
                name: 'Component: Optimizing Compiler',
                color: 'bfdadc',
                default: false,
                description: null,
            },
        ],
        state: 'open',
        locked: false,
        assignee: null,
        assignees: [],
        milestone: null,
        comments: 2,
        created_at: '2024-08-19T17:25:03Z',
        updated_at: '2024-08-20T15:16:21Z',
        closed_at: null,
        author_association: 'NONE',
        active_lock_reason: null,
        body: '### What kind of issue is this?\r\n\r\n- [ ] React Compiler core (the JS output is incorrect, or your app works incorrectly after optimization)\r\n- [ ] babel-plugin-react-compiler (build issue installing or using the Babel plugin)\r\n- [X] eslint-plugin-react-compiler (build issue installing or using the eslint plugin)\r\n- [ ] react-compiler-healthcheck (build issue installing or using the healthcheck script)\r\n\r\n### Link to repro\r\n\r\nhttps://github.com/gkiely/react-eslint-vite\r\n\r\n### Repro steps\r\n```sh\r\ngit clone https://github.com/gkiely/react-eslint-vite\r\nnpm i \r\nnpm run lint\r\n```\r\n\r\nEach of these show an error message:\r\n- Pass a ref to a custom hook\r\n- Set ref.current inside a useCallback and pass to a custom hook\r\n- useImperativeHandle\r\n\r\n### How often does this bug happen?\r\n\r\nEvery time\r\n\r\n### What version of React are you using?\r\n\r\n19.0.0-rc-6ebfd5b0-20240818',
        reactions: {
            url: 'https://api.github.com/repos/facebook/react/issues/30745/reactions',
            total_count: 0,
            '+1': 0,
            '-1': 0,
            laugh: 0,
            hooray: 0,
            confused: 0,
            heart: 0,
            rocket: 0,
            eyes: 0,
        },
        timeline_url:
            'https://api.github.com/repos/facebook/react/issues/30745/timeline',
        performed_via_github_app: null,
        state_reason: null,
    },
    {
        url: 'https://api.github.com/repos/facebook/react/issues/30759',
        repository_url: 'https://api.github.com/repos/facebook/react',
        labels_url:
            'https://api.github.com/repos/facebook/react/issues/30759/labels{/name}',
        comments_url:
            'https://api.github.com/repos/facebook/react/issues/30759/comments',
        events_url:
            'https://api.github.com/repos/facebook/react/issues/30759/events',
        html_url: 'https://github.com/facebook/react/pull/30759',
        id: 2476479245,
        node_id: 'PR_kwDOAJy2Ks545w8X',
        number: 30759,
        title: 'Fix: Synchronous popstate transitions',
        user: {
            login: 'acdlite',
            id: 3624098,
            node_id: 'MDQ6VXNlcjM2MjQwOTg=',
            avatar_url: 'https://avatars.githubusercontent.com/u/3624098?v=4',
            gravatar_id: '',
            url: 'https://api.github.com/users/acdlite',
            html_url: 'https://github.com/acdlite',
            followers_url: 'https://api.github.com/users/acdlite/followers',
            following_url:
                'https://api.github.com/users/acdlite/following{/other_user}',
            gists_url: 'https://api.github.com/users/acdlite/gists{/gist_id}',
            starred_url:
                'https://api.github.com/users/acdlite/starred{/owner}{/repo}',
            subscriptions_url:
                'https://api.github.com/users/acdlite/subscriptions',
            organizations_url: 'https://api.github.com/users/acdlite/orgs',
            repos_url: 'https://api.github.com/users/acdlite/repos',
            events_url: 'https://api.github.com/users/acdlite/events{/privacy}',
            received_events_url:
                'https://api.github.com/users/acdlite/received_events',
            type: 'User',
            site_admin: false,
        },
        labels: [
            {
                id: 196858374,
                node_id: 'MDU6TGFiZWwxOTY4NTgzNzQ=',
                url: 'https://api.github.com/repos/facebook/react/labels/CLA%20Signed',
                name: 'CLA Signed',
                color: 'e7e7e7',
                default: false,
                description: null,
            },
            {
                id: 1775958285,
                node_id: 'MDU6TGFiZWwxNzc1OTU4Mjg1',
                url: 'https://api.github.com/repos/facebook/react/labels/React%20Core%20Team',
                name: 'React Core Team',
                color: '9149d1',
                default: false,
                description: 'Opened by a member of the React Core Team',
            },
        ],
        state: 'open',
        locked: false,
        assignee: null,
        assignees: [],
        milestone: null,
        comments: 2,
        created_at: '2024-08-20T20:22:14Z',
        updated_at: '2024-08-22T14:50:53Z',
        closed_at: null,
        author_association: 'COLLABORATOR',
        active_lock_reason: null,
        draft: false,
        pull_request: {
            url: 'https://api.github.com/repos/facebook/react/pulls/30759',
            html_url: 'https://github.com/facebook/react/pull/30759',
            diff_url: 'https://github.com/facebook/react/pull/30759.diff',
            patch_url: 'https://github.com/facebook/react/pull/30759.patch',
            merged_at: null,
        },
        body: "This is a refactor of the fix in #27505.\r\n\r\nWhen a transition update is scheduled by a popstate event, (i.e. a back/ forward navigation) we attempt to render it synchronously even though it's a transition, since it's likely the previous page's data is cached.\r\n\r\nIn #27505, I changed the implementation so that it only \"upgrades\" the priority of the transition for a single attempt. If the attempt suspends, say because the data is not cached after all, from then on it should be treated as a normal transition.\r\n\r\nBut it turns out #27505 did not work as intended, because it relied on marking the root with pending synchronous work (root.pendingLanes), which was never cleared until the popstate update completed.\r\n\r\nThe test scenarios I wrote accidentally worked for a different reason related to suspending the work loop, which I'm currently in the middle of refactoring.",
        reactions: {
            url: 'https://api.github.com/repos/facebook/react/issues/30759/reactions',
            total_count: 0,
            '+1': 0,
            '-1': 0,
            laugh: 0,
            hooray: 0,
            confused: 0,
            heart: 0,
            rocket: 0,
            eyes: 0,
        },
        timeline_url:
            'https://api.github.com/repos/facebook/react/issues/30759/timeline',
        performed_via_github_app: null,
        state_reason: null,
    },
];
